[{"/Users/ckln/Documents/Projects/em_chat/client/src/index.tsx":"1","/Users/ckln/Documents/Projects/em_chat/client/src/reportWebVitals.ts":"2","/Users/ckln/Documents/Projects/em_chat/client/src/App.tsx":"3","/Users/ckln/Documents/Projects/em_chat/client/src/theme/index.ts":"4","/Users/ckln/Documents/Projects/em_chat/client/src/hooks/useLocalStorage.ts":"5","/Users/ckln/Documents/Projects/em_chat/client/src/pages/login/index.tsx":"6","/Users/ckln/Documents/Projects/em_chat/client/src/pages/chat/index.tsx":"7","/Users/ckln/Documents/Projects/em_chat/client/src/utils/mockData/messages.ts":"8","/Users/ckln/Documents/Projects/em_chat/client/src/components/messageList/index.tsx":"9","/Users/ckln/Documents/Projects/em_chat/client/src/components/messageInput/index.tsx":"10","/Users/ckln/Documents/Projects/em_chat/client/src/components/messageList/message.tsx":"11","/Users/ckln/Documents/Projects/em_chat/client/src/components/userList/index.tsx":"12","/Users/ckln/Documents/Projects/em_chat/client/src/components/userList/user.tsx":"13","/Users/ckln/Documents/Projects/em_chat/client/src/utils/mockData/users.ts":"14","/Users/ckln/Documents/Projects/em_chat/client/src/hooks/useChat.ts":"15","/Users/ckln/Documents/Projects/em_chat/client/src/components/videoFeedback/index.tsx":"16","/Users/ckln/Documents/Projects/em_chat/client/src/hooks/useUserMedia.ts":"17","/Users/ckln/Documents/Projects/em_chat/client/src/components/videoFeedback/objectDetectionSketch.js":"18"},{"size":743,"mtime":1611428476420,"results":"19","hashOfConfig":"20"},{"size":425,"mtime":1611428476421,"results":"21","hashOfConfig":"20"},{"size":972,"mtime":1612273209298,"results":"22","hashOfConfig":"20"},{"size":393,"mtime":1611428476423,"results":"23","hashOfConfig":"20"},{"size":674,"mtime":1611428476420,"results":"24","hashOfConfig":"20"},{"size":2019,"mtime":1611665661608,"results":"25","hashOfConfig":"20"},{"size":3019,"mtime":1612370159655,"results":"26","hashOfConfig":"20"},{"size":846,"mtime":1610574783530,"results":"27","hashOfConfig":"20"},{"size":1400,"mtime":1611581428530,"results":"28","hashOfConfig":"20"},{"size":959,"mtime":1611428476418,"results":"29","hashOfConfig":"20"},{"size":941,"mtime":1611428476419,"results":"30","hashOfConfig":"20"},{"size":569,"mtime":1611665661606,"results":"31","hashOfConfig":"20"},{"size":523,"mtime":1611428476419,"results":"32","hashOfConfig":"20"},{"size":68,"mtime":1611428476425,"results":"33","hashOfConfig":"20"},{"size":1872,"mtime":1611665661606,"results":"34","hashOfConfig":"20"},{"size":2827,"mtime":1612376575173,"results":"35","hashOfConfig":"20"},{"size":756,"mtime":1612266183798,"results":"36","hashOfConfig":"20"},{"size":4124,"mtime":1612272970441,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"149zxcx",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ckln/Documents/Projects/em_chat/client/src/index.tsx",[],["81","82"],"/Users/ckln/Documents/Projects/em_chat/client/src/reportWebVitals.ts",[],"/Users/ckln/Documents/Projects/em_chat/client/src/App.tsx",[],"/Users/ckln/Documents/Projects/em_chat/client/src/theme/index.ts",[],"/Users/ckln/Documents/Projects/em_chat/client/src/hooks/useLocalStorage.ts",["83"],"import { useState } from 'react';\n\nexport default function useLocalStorage(key: string, initValue?: string) {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item || initValue;\n    } catch (err) {\n      console.warn('Setting localStorage went wrong: ', err);\n      return initValue;\n    }\n  });\n\n  const setValue = (value: string) => {\n    window.localStorage.setItem(key, value);\n    setStoredValue(value);\n  };\n\n  const clearStorage = () => localStorage.removeItem(key);\n\n  return [storedValue, setValue, clearStorage] as [\n    string,\n    (value: string) => void,\n    () => void\n  ];\n}\n","/Users/ckln/Documents/Projects/em_chat/client/src/pages/login/index.tsx",["84","85"],"import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\nimport {\n  Center,\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  FormHelperText,\n  Input,\n  Button\n} from '@chakra-ui/react';\nimport { ArrowForwardIcon } from '@chakra-ui/icons';\n\nimport useLocalStorage from 'hooks/useLocalStorage';\n\nconst Login: React.FC = () => {\n  const [storage, setStorage] = useLocalStorage('username');\n  const [userId, setUserId] = useLocalStorage('userId');\n\n  const [username, setUsername] = useState('');\n  const [error, setError] = useState<string>('');\n\n  if (storage) return <Redirect to=\"/chat\" />;\n\n  const handleSubmit = () => {\n    const uuid = uuidv4();\n    if (uuid && username) {\n      setUserId(uuid);\n      setStorage(username);\n    } else {\n      setError('Valid username is required!');\n    }\n  };\n\n  return (\n    <Center\n      border=\"15px solid black\"\n      borderRadius={5}\n      h=\"100vh\"\n      w=\"100%\"\n      p=\"20%\"\n    >\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n        }}\n      >\n        <FormControl id=\"username\">\n          <FormLabel>n i c k</FormLabel>\n          <Input\n            size=\"lg\"\n            value={username}\n            onChange={({ target: { value } }) => setUsername(value)}\n            onKeyDown={({ key }) => {\n              if (key === 'Enter') {\n                handleSubmit();\n              }\n            }}\n          />\n          <FormHelperText>enter your chat nick</FormHelperText>\n          {error && <FormErrorMessage>{error}</FormErrorMessage>}\n          <Button\n            onClick={handleSubmit}\n            mt={4}\n            variant=\"outline\"\n            border=\"2px\"\n            colorScheme=\"black\"\n            _hover={{\n              bg: '#c5c5c5',\n              borderColor: '#313131'\n            }}\n            rightIcon={<ArrowForwardIcon />}\n          >\n            ENTER\n          </Button>\n        </FormControl>\n      </form>\n    </Center>\n  );\n};\n\nexport default Login;\n","/Users/ckln/Documents/Projects/em_chat/client/src/pages/chat/index.tsx",["86","87","88","89"],"import React, { useState } from 'react';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport {\n  Grid,\n  Box,\n  GridItem,\n  Button,\n  Spinner,\n  Text,\n  useBreakpointValue\n} from '@chakra-ui/react';\n\nimport MessageInput from 'components/messageInput';\nimport MesageList from 'components/messageList';\nimport UserList from 'components/userList';\nimport VideoFeedback from 'components/videoFeedback';\nimport useLocalStorage from 'hooks/useLocalStorage';\nimport useChat from 'hooks/useChat';\n\ninterface Props {\n  modelStatus: null | 'loading' | 'success';\n}\n\nconst Chat: React.FC<Props> = ({ modelStatus }) => {\n  const [username, _, clearUsername] = useLocalStorage('username');\n  const [userId, __, clearUserId] = useLocalStorage('userId');\n  const { messages, sendMessage, users, error } = useChat(username, userId);\n  const upSm = useBreakpointValue({ base: false, md: true });\n  const history = useHistory();\n\n  const [message, setMessage] = useState('');\n\n  if (error)\n    return (\n      <Box m={24}>\n        <h1>{error}</h1>\n        <button\n          onClick={() => {\n            clearUsername();\n            clearUserId();\n            history.push('/');\n          }}\n        >\n          GO BACK\n        </button>\n      </Box>\n    );\n  if (!username || !userId) return <Redirect to=\"/login\" />;\n\n  const handleSendMessage = () => {\n    if (message && sendMessage) sendMessage(message, username);\n    setMessage('');\n  };\n\n  return (\n    <Grid\n      textStyle=\"basicText\"\n      h=\"100vh\"\n      templateColumns={upSm ? '2fr 2fr' : '1fr'}\n      templateRows=\"1fr 1fr 1fr\"\n      gap={1}\n      background=\"silver\"\n      border=\"8px solid\"\n      borderColor=\"silverMain\"\n      borderRadius={5}\n    >\n      <GridItem bg=\"surface\" p={8} display={!upSm ? 'none' : 'initial'}>\n        <Box display=\"flex\" alignItems=\"flex-end\">\n          <Button\n            onClick={() => {\n              clearUsername();\n              clearUserId();\n              history.push('/');\n            }}\n            mb={1}\n            h={8}\n            bg=\"transparent\"\n            border=\"1px solid white\"\n          >\n            ⬅\n          </Button>\n          <Text ml={4}>USERNAME: {username}</Text>\n        </Box>\n        <hr />\n        <UserList username={username} users={users || []} />\n      </GridItem>\n      <GridItem bg=\"surface\" rowSpan={2}>\n        <MesageList messages={messages || []} username={username} />\n      </GridItem>\n      <GridItem\n        bg=\"surface\"\n        p={8}\n        rowSpan={2}\n        display={!upSm ? 'none' : 'flex'}\n        flexDir=\"column\"\n        alignItems=\"center\"\n      >\n        {modelStatus === 'success' ? <VideoFeedback /> : <Spinner />}\n      </GridItem>\n      <GridItem p={2} bg=\"surface\">\n        <MessageInput\n          value={message}\n          onChange={({ target: { value } }) => {\n            if (value[0] === '\\n') return;\n            setMessage(value);\n          }}\n          onSend={handleSendMessage}\n        />\n      </GridItem>\n    </Grid>\n  );\n};\n\nexport default Chat;\n","/Users/ckln/Documents/Projects/em_chat/client/src/utils/mockData/messages.ts",[],["90","91"],"/Users/ckln/Documents/Projects/em_chat/client/src/components/messageList/index.tsx",[],"/Users/ckln/Documents/Projects/em_chat/client/src/components/messageInput/index.tsx",[],"/Users/ckln/Documents/Projects/em_chat/client/src/components/messageList/message.tsx",[],"/Users/ckln/Documents/Projects/em_chat/client/src/components/userList/index.tsx",[],"/Users/ckln/Documents/Projects/em_chat/client/src/components/userList/user.tsx",[],"/Users/ckln/Documents/Projects/em_chat/client/src/utils/mockData/users.ts",[],["92","93"],"/Users/ckln/Documents/Projects/em_chat/client/src/hooks/useChat.ts",[],"/Users/ckln/Documents/Projects/em_chat/client/src/components/videoFeedback/index.tsx",["94","95","96"],"/Users/ckln/Documents/Projects/em_chat/client/src/hooks/useUserMedia.ts",[],["97","98"],"/Users/ckln/Documents/Projects/em_chat/client/src/components/videoFeedback/objectDetectionSketch.js",["99","100","101","102","103","104","105"],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":9,"column":7,"nodeType":"112","messageId":"113","endLine":9,"endColumn":19},{"ruleId":"114","severity":1,"message":"115","line":19,"column":10,"nodeType":"116","messageId":"117","endLine":19,"endColumn":16},{"ruleId":"118","severity":1,"message":"115","line":19,"column":10,"nodeType":"116","messageId":"117","endLine":19,"endColumn":16},{"ruleId":"114","severity":1,"message":"119","line":25,"column":20,"nodeType":"116","messageId":"117","endLine":25,"endColumn":21},{"ruleId":"118","severity":1,"message":"119","line":25,"column":20,"nodeType":"116","messageId":"117","endLine":25,"endColumn":21},{"ruleId":"114","severity":1,"message":"120","line":26,"column":18,"nodeType":"116","messageId":"117","endLine":26,"endColumn":20},{"ruleId":"118","severity":1,"message":"120","line":26,"column":18,"nodeType":"116","messageId":"117","endLine":26,"endColumn":20},{"ruleId":"106","replacedBy":"121"},{"ruleId":"108","replacedBy":"122"},{"ruleId":"106","replacedBy":"123"},{"ruleId":"108","replacedBy":"124"},{"ruleId":"114","severity":1,"message":"125","line":3,"column":19,"nodeType":"116","messageId":"117","endLine":3,"endColumn":22},{"ruleId":"118","severity":1,"message":"125","line":3,"column":19,"nodeType":"116","messageId":"117","endLine":3,"endColumn":22},{"ruleId":"126","severity":1,"message":"127","line":77,"column":6,"nodeType":"128","endLine":77,"endColumn":52,"suggestions":"129"},{"ruleId":"106","replacedBy":"130"},{"ruleId":"108","replacedBy":"131"},{"ruleId":"114","severity":1,"message":"132","line":1,"column":13,"nodeType":"116","messageId":"117","endLine":1,"endColumn":15},{"ruleId":"118","severity":1,"message":"132","line":1,"column":13,"nodeType":"116","messageId":"117","endLine":1,"endColumn":15},{"ruleId":"110","severity":1,"message":"111","line":52,"column":11,"nodeType":"112","messageId":"113","endLine":52,"endColumn":22},{"ruleId":"110","severity":1,"message":"111","line":56,"column":9,"nodeType":"112","messageId":"113","endLine":56,"endColumn":20},{"ruleId":"133","severity":1,"message":"134","line":68,"column":32,"nodeType":"135","messageId":"136","endLine":68,"endColumn":34},{"ruleId":"133","severity":1,"message":"134","line":93,"column":32,"nodeType":"135","messageId":"136","endLine":93,"endColumn":34},{"ruleId":"110","severity":1,"message":"111","line":149,"column":13,"nodeType":"112","messageId":"113","endLine":149,"endColumn":24},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-console","Unexpected console statement.","MemberExpression","unexpected","no-unused-vars","'userId' is assigned a value but never used.","Identifier","unusedVar","@typescript-eslint/no-unused-vars","'_' is assigned a value but never used.","'__' is assigned a value but never used.",["137"],["138"],["137"],["138"],"'Box' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has unnecessary dependencies: 'canvasRef.current' and 'videoRef.current'. Either exclude them or remove the dependency array. Mutable values like 'videoRef.current' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["139"],["137"],["138"],"'p5' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},"Update the dependencies array to be: [context]",{"range":"142","text":"143"},[2448,2494],"[context]"]